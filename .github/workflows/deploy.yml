name: Build and Deploy Frontend Docker Image

on:
  push:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.build.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend Docker image
        id: build
        run: |
          TAG="ivankhoda/fitness:frontend-${{ github.sha }}"
          docker build -f Dockerfile.prod -t $TAG .
          docker push $TAG

  deploy:
    needs: frontend
    runs-on: ubuntu-latest
    steps:
      - name: Start SSH Agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy Frontend to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << EOF
            docker pull ivankhoda/fitness:frontend-${{ github.sha }}

            sed -i 's|ivankhoda/fitness:frontend-.*|ivankhoda/fitness:frontend-${{ github.sha }}|' docker-compose.prod.yml

            docker-compose -f docker-compose.prod.yml up -d frontend
          EOF
      - name: Clean up old Docker images
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
            # Remove images that don't match the current backend and frontend tags
            docker images --format '{{.Repository}}:{{.Tag}} {{.ID}}' | grep -v 'ivankhoda/fitness:backend-${{ github.sha }}' | grep -v 'ivankhoda/fitness:frontend-${{ github.sha }}' | awk '{print $2}' | xargs -I {} docker rmi -f {}
          EOF
